syntax = "proto3";

package scangroup;

import "prototypes/user.proto";

option go_package="gopkg.linkai.io/v1/repos/am/protocservices/scangroup";

service ScanGroup {
    rpc Get(GroupRequest) returns (GroupResponse);
    rpc GetByName(GroupRequest) returns (GroupResponse);
    rpc Create(NewGroupRequest) returns (GroupCreatedResponse);
    rpc Update(UpdateGroupRequest) returns (GroupUpdatedResponse);
    rpc Delete(DeleteGroupRequest) returns (GroupDeletedResponse);
    rpc Groups(GroupsRequest) returns (stream GroupResponse);
}

message NSModuleConfig {
    string Name = 1;
}

message BruteModuleConfig {
    string Name = 1;
    repeated string CustomSubNames = 2;
    int32 MaxDepth = 3;
}

message PortModuleConfig {
    string Name = 1;
    repeated int32 Ports = 2;
}

message WebModuleConfig {
    string Name = 1;
    bool TakeScreenShots = 2;
    int32 MaxLinks = 3;
    bool ExtractJS = 4;
    bool FingerprintFrameworks = 5;
}

message ModuleConfiguration {
    NSModuleConfig NSConfig = 1;
    BruteModuleConfig BruteConfig = 2;
    PortModuleConfig PortConfig = 3;
    WebModuleConfig WebModuleConfig = 4;
    repeated int64 DailyScanSchedules = 5;
}

message Group {
    int32 OrgID = 1;
    int32 GroupID = 2;
    string GroupName = 3;
    int64 CreationTime = 4;
    int32 CreatedBy = 5;
    bytes OriginalInput = 6;
    int64 ModifiedTime = 7;
    int32 ModifiedBy = 8;
    ModuleConfiguration ModuleConfiguration = 9;
    bool Deleted = 10;
}

message NewGroupRequest {
    UserContext UserContext = 1;
    Group Group = 2;
}

message GroupCreatedResponse {
    int32 OrgID = 1;
    int32 GroupID = 2;
}

message UpdateGroupRequest {
    UserContext UserContext = 1;
    Group Group = 2;
    int32 GroupID = 3;
    string GroupName = 4;
}

message GroupUpdatedResponse {
    int32 OrgID = 1;
    int32 GroupID = 2;
}

message DeleteGroupRequest {
    UserContext UserContext = 1;
    int32 GroupID = 2;
}

message GroupDeletedResponse {
    int32 OrgID = 1;
    int32 GroupID = 2;
}

message GroupRequest {
    UserContext UserContext = 1;
    int32 GroupID = 2;
    string GroupName = 4;
}

message GroupsRequest {
    UserContext UserContext = 1;
}

message GroupResponse {
    int32 OrgID = 1;
    Group Group = 2;
}