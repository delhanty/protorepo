syntax = "proto3";

service JobServicer {
    rpc Jobs(JobRequest) returns (stream Job);
    rpc Get(JobRequest) returns (Job);
    rpc GetByName(JobRequest) returns (Job);
    rpc Add(AddRequest) returns (JobAddedResponse);
    rpc UpdateStatus(UpdateStatusRequest) returns (JobStatus);
    rpc Status(StatusRequest) returns (JobStatus);
    rpc Pause(PauseRequest) returns (JobStatus);
    rpc Resume(ResumeRequest) returns (JobStatus);
    rpc Stop(StopRequest) returns (JobStatus);
}

message JobRequest {
    int32 OrgID = 1;
    bytes ID = 2;
    string Name = 3;
}

message AddRequest {
    int32 OrgID = 1;
    int32 UserID = 2;
    string Name = 3;
    int32 ScanGroupID = 4;
}

message UpdateStatusRequest {
    JobRequest Job = 1;
}

message StatusRequest {
    JobRequest Job = 1;
}

message PauseRequest {
    JobRequest Job = 1;
}

message ResumeRequest {
    JobRequest Job = 1;
}

message StopRequest {
    JobRequest Job = 1;
}

message JobAddedResponse {
    bytes ID = 1;
}

message Module {
    string Name = 1;
    string Config = 2;
}

message JobConfig {
    int32 OrgID = 1;
    int32 ScanGroupID = 2;
    int32 ConfiguredUserID = 3;
    int32 LaunchUserID = 4;
    repeated Module Modules = 5;
    int64 MaxHostsAllowed = 6;
}

message Job {
    bytes ID = 1;
    JobConfig Config = 2;
    int64 StartTime = 3;
    int64 EndTime = 4;
}

message ModuleStat {
    int64 Running = 1;
    int64 WorkCount = 2;
    int64 Remaining = 3;
}

message JobStatus {
    bytes ID = 1;
    int32 Status = 2;
    repeated ModuleStat ModuleStats = 3;
}